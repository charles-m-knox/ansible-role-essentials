# SPDX-License-Identifier: MIT-0
---

# This task requires that the state be set in order to work. Note that you can
# technically define directories with this.
- name: Create directories and/or modify files
  ansible.builtin.file:
    path: "{{ item.dest }}"
    mode: "{{ item.mode | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    state: "{{ item.state }}"
    attributes: "{{ item.attributes | default(omit) }}"
    force: "{{ item.force | default(omit) }}"
    seuser: "{{ item.seuser | default(omit) }}"
    serole: "{{ item.serole | default(omit) }}"
    setype: "{{ item.setype | default(omit) }}"
    selevel: "{{ item.selevel | default(omit) }}"
    unsafe_writes: "{{ item.unsafe_writes | default(omit) }}"
    recurse: "{{ item.recurse | default(omit) }}"
    follow: "{{ item.follow | default(omit) }}"
    modification_time: "{{ item.modification_time | default(omit) }}"
    modification_time_format: "{{ item.modification_time_format | default(omit) }}"
    access_time: "{{ item.access_time | default(omit) }}"
    access_time_format: "{{ item.access_time_format | default(omit) }}"
    src: "{{ item.src_link | default(omit) }}"
  loop: "{{ files }}"
  become: "{{ item.become | default(false) }}"
  no_log: "{{ item.no_log | default(omit) }}"
  when:
    - files is defined
    - files | length > 0
    - item is defined
    - item
    - ('state' in item)
  tags:
    - files

# see directories.yml for similarly grouped items
- name: Render files
  ansible.builtin.template:
    src: "{{ item.src | default('files/file.j2') }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
  loop: "{{ files }}"
  become: "{{ item.become | default(false) }}"
  no_log: "{{ item.no_log | default(omit) }}"
  when:
    - files is defined
    - files | length > 0
    - item is defined
    - item
    - item.content is defined
    - ('state' in item and (item.state == "file" or item.state == "present")) or ('state' not in item)
  tags:
    - files

- name: Run commmand after file was created  # noqa no-changed-when
  ansible.builtin.shell:
    cmd: "{{ item.run_command_after.shell }}"
    executable: "{{ item.run_command_after.executable | default(omit) }}"
    chdir: "{{ item.run_command_after.chdir | default(omit) }}"
  become: "{{ item.run_command_after.become | default(false) }}"
  loop: "{{ files }}"
  no_log: "{{ item.no_log | default(omit) }}"
  when:
    - files
    - files | length > 0
    - item is defined
    - item
    - "'run_command_after' in item"
    - "'shell' in item.run_command_after"
  tags:
    - files
    - files-run-after-commands
